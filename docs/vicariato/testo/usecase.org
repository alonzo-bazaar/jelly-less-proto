[[https://clojure.org/community/success_stories][clojure forse?]]
* use case
lo use case mi sembra un po' difficile da implementare
posso comunque presentare uno use case ma in maniera pi√π astratta

tipo metto come esempio a caso il sistema di monitoraggio proposto nella tesi?
possibili esempi a caso da presentare anche solo come teoria
 - sistema di plugin caricabili a runtime
 - scriptlet per modifica a runtime di comportamento di programma
 - observability layer

ok ma di cosa?
 - observability layer per applicazioni che richiedono tanto uptime
 - plugin system per
   - qualcosa che suppone di avere utenti che vorrano farci il cazzo che voglioni
   - principalmente applicazioni desktop

una shell? ma sarebbe comunque un po' contorta da fare     

* Idee per "demo"
** disegnello
uno strumentino a cazzo per disegnare minchiate su command line?
java offre sti metodi
canvasInit
canvasClear
canvasResize

drawSquare
drawLine
drawCircle
drawPixel

e qualche altra utility primitiva

poi attacchi una shell e ti metti a sminchiare

** minchiello htmello?
attacchi a un file html, e magari a un file css

crei bottom up delle "componenti" da renderizzare (funzioni/struct/et al)
chiami una funzione ~render~ e poi fai refresh del browser

** file di configurazione?
utilizzo tipo un json o xml, ma turing completo 
si pensi a una versione fatta peggio di [[https://github.com/dhall-lang/dhall-lang][dhall]] (e considerando che dhall era fatto apposta per non essere turing completo, mentre questo apposta per esserlo...)

utilizzabile come un si usano jsonObject, ma si ha che
 1. esegue il file
 2. prende qualche oggetto dall'environment del runtime
 3. profit

sia htmello che configurazione trarrebbero godo dall'introduzione di struct simil-json nel linguaggio

disegnello trarrebbe anch'esso godo, ma in minor magnitudine

*** Ok, ma configurare cosa?

** Binding a librerie java
*** Json explorer?
binding a org.json
